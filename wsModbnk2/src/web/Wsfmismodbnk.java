
package web;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * Oracle JAX-WS 2.1.5
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "wsfmismodbnk", targetNamespace = "http://web/", wsdlLocation = "http://deslogic01.aduana.gob.bo:7001/wsfmismodbnk/wsfmismodbnk?WSDL#%7Bhttp%3A%2F%2Fweb%2F%7Dwsfmismodbnk")
public class Wsfmismodbnk
    extends Service
{

    private final static URL WSFMISMODBNK_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(web.Wsfmismodbnk.class.getName());

    static {
        URL url = null;
        String ruta_servicio="";
        try {
             ruta_servicio = "http://deslogic01.aduana.gob.bo:7001/wsfmismodbnk/wsfmismodbnk?WSDL";
            //Seguridad s=new
            URL baseUrl;
            baseUrl = web.Wsfmismodbnk.class.getResource(".");
            url = new URL(baseUrl, ruta_servicio);
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location:"+ruta_servicio);
            logger.warning(e.getMessage());
        }
        WSFMISMODBNK_WSDL_LOCATION = url;
    }

    public Wsfmismodbnk(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Wsfmismodbnk() {
        super(WSFMISMODBNK_WSDL_LOCATION, new QName("http://web/", "wsfmismodbnk"));
    }

    /**
     * 
     * @return
     *     returns Consulta
     */
    @WebEndpoint(name = "wsfmismodbnk")
    public Consulta getWsfmismodbnk() {
        return super.getPort(new QName("http://web/", "wsfmismodbnk"), Consulta.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Consulta
     */
    @WebEndpoint(name = "wsfmismodbnk")
    public Consulta getWsfmismodbnk(WebServiceFeature... features) {
        return super.getPort(new QName("http://web/", "wsfmismodbnk"), Consulta.class, features);
    }

}
